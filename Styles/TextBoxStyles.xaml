<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    <Style x:Key="CustomButtonBaseStyle" TargetType="Button">
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="True">
                        <Grid Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="Placeholder"
                                Margin="{TemplateBinding Padding}"
                                Padding="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Style="{StaticResource TextBlockDefaultThiLight}"
                                Text="{Binding Path=(hc:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                TextTrimming="CharacterEllipsis"
                                Visibility="{TemplateBinding Content,
                                                             Converter={StaticResource String2VisibilityReConverter}}" />

                            <TextBlock
                                x:Name="cp"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}"
                                TextDecorations="{TemplateBinding TextBlock.TextDecorations}"
                                TextTrimming="CharacterEllipsis"
                                Visibility="{TemplateBinding Content,
                                                             Converter={StaticResource String2VisibilityConverter}}" />

                            <Path
                                Grid.Column="1"
                                Width="20"
                                Height="20"
                                Margin="10"
                                HorizontalAlignment="Right"
                                Data="{StaticResource DragHorizontalGeometry}"
                                Fill="{DynamicResource PrimaryBrush}"
                                Stretch="Uniform" />

                        </Grid>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="bd"
                                            Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                            To="#282d3c"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="bd"
                                            Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                            To="{DynamicResource Button.BorderBrush.Color}"
                                            Duration="0:0:0.2" />
                        -->
                        <!--<DoubleAnimation Storyboard.TargetName="ShadowEffect" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"></DoubleAnimation>-->
                        <!--
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>